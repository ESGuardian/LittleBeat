input {
  http {
    host => "127.0.0.1"
    port => 1080
    codec => nmap
    tags => ["nmap"]
  }
}

filter {
  if "nmap" in [tags] { 
    if [status][state] == "down" {
      drop {}
    }
	mutate {remove_field => ["times", "run_stats", "[headers][content_length]", "[headers][content_type]", "[headers][http_accept]", "[headers][http_expect]", "[headers][http_host]", "[headers][http_user_agent]", "[headers][http_version]", "[headers][request_method]", "[headers][request_path]", "[headers][request_uri]", "host"]}

    
    if [hostname][name] {
        
        
        mutate {add_field => {"winlog_url" => "/app/kibana#/dashboard/WinLog-dash?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now%2Fd,mode:quick,to:now%2Fd))&_a=(filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'winlogbeat-*',key:beat.hostname,negate:!f,value:afanasenko),query:(match:(beat.hostname:(query:afanasenko,type:phrase))))),options:(darkTheme:!f),query:(query_string:(analyze_wildcard:!t,query:'*')),title:WinLog-dash,uiState:(P-1:(spy:(mode:(fill:!f,name:!n)))))"}}
        
        ruby { code => "sname = event.get('[hostname][name]').split('.').first.downcase; suri = event.get('[winlog_url]').gsub('afanasenko',sname); event.set('[winlog_url]', suri);" }
       
    }
    
  }
}


output {
  if "nmap" in [tags] {
    if "debug" in [tags] {
        file { 
            codec => rubydebug
            path => "/var/log/logstash/nmap_gebug.txt"
        }
    }
    else {
        elasticsearch {        
            hosts => ["a-crc-eventdb:9200"]
            index => "nmap-6.x-%{+YYYY.MM.dd}"
            template => "/etc/logstash/templates/nmap.template.json"
            template_name => "nmap-6.x"
            template_overwrite => true
        }
    }
   
  } 
  
}
